print("------------------1、字典------------------------")
'''
    字典是无序、可变的。以"键-值对"的形式存储。 字典有时候也称为关联数组和散列表（hash table）
'''
print("------------------1.1、字典的创建------------------------")
'''
    00、创建空字典
    dict1={}  # {}创建出来的只能是字典
    dict2=dict()
    01、定义字典，使用键值对
    dictionary={'key1':'value1','key2':'value2',...,'keyN':'valueN'}
    02、通过映射函数创建字典
    dictionary=dict(zip(list1,list2))
    03、通过给定的"键值对"创建字典
    dictionary=dic(key1=value1,key2=value2,...,keyN=valueN)
    04、创建值为空的字典
    dictionary=dict.fromkeys(list1)
'''
print("------------------1.2、字典的删除------------------------")
'''
    del dictionary
    dictionary.clear()
'''
print("------------------1.3、字典的常见操作------------------------")
'''
    增/改：
        dictionary[key]=value  # 添加、修改
    删：
        del dictionary[key]    # 删除元素
    查：
    
'''
print("------------------1.4、字典的推导式------------------------")
'''
    
'''

print("------------------2、集合------------------------")
print("------------------2.1、集合的创建------------------------")
'''
    01、集合的特点: "去重","无序"，不支持下标查找
    02、创建空集合:  s1 = set()
'''
s1 = {10, 20, 30, 30, 80, 0, 90}
print(s1)
s2 = set()
print(type(s2))

print("------------------2.2、集合的常见操作------------------------")
'''
    增：
        add()：增加单一数据
        update()：增加数据序列
    删：
        remove()： 删除集合中的指定数据，如果数据不存在则报错。
        discard(): 删除集合中的指定数据，如果数据不存在也不会报错。
        pop():随机删除集合中的某个数据，并返回这个数据
    查：
        in: 判断数据在集合序列
        not in: 判断数据不在集合序列
    改：
        
'''
# 1.集合是可变类型数据
s3 = {11, 12, 13}
s3.add(14)  # add增加单一数据
s3.add(14)  # 集合有去重功能，如果追加的数据是集合已有的数据，则什么事情都不做
print(s3)
list000 = [1, 2, 3, 4]
# s3.add(list000)      # 报错
# print(s3)
s3.update(list000)  # update追加的数据序列
print(s3)
# 2.集合的删除操作
s3.discard(18)
print(s3)
# s3.remove(18)
# print(s3)   # 报错
print(s3.pop())
# 3.集合的查找操作
print(10 in s3)
print(10 not in s3)
print(11 in s3)
print("------------------'2.3、集合的交集&、并集｜、差集-' ------------------------")